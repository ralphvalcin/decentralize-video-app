apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: video-chat-ingress
  namespace: video-chat
  labels:
    app.kubernetes.io/name: video-chat
    app.kubernetes.io/component: ingress
  annotations:
    # AWS Load Balancer Controller annotations
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS": 443}]'
    alb.ingress.kubernetes.io/ssl-redirect: '443'
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:REGION:ACCOUNT:certificate/CERT-ID
    
    # Security annotations
    alb.ingress.kubernetes.io/security-groups: sg-xxxxxxxxx
    alb.ingress.kubernetes.io/wafv2-acl-arn: arn:aws:wafv2:REGION:ACCOUNT:regional/webacl/NAME/ID
    
    # Performance annotations
    alb.ingress.kubernetes.io/load-balancer-attributes: |
      idle_timeout.timeout_seconds=60
      routing.http2.enabled=true
      access_logs.s3.enabled=true
      access_logs.s3.bucket=video-chat-access-logs
      access_logs.s3.prefix=alb
    
    # Rate limiting and DDoS protection
    alb.ingress.kubernetes.io/rate-limit-requests-per-second: "100"
    
    # Health check configuration
    alb.ingress.kubernetes.io/healthcheck-path: /health
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: '15'
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '5'
    alb.ingress.kubernetes.io/healthy-threshold-count: '2'
    alb.ingress.kubernetes.io/unhealthy-threshold-count: '2'
spec:
  tls:
  - hosts:
    - video-chat.example.com
    - api.video-chat.example.com
    secretName: video-chat-tls
  rules:
  - host: video-chat.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: video-chat-frontend-service
            port:
              number: 80
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: video-chat-backend-service
            port:
              number: 5001
      - path: /socket.io
        pathType: Prefix
        backend:
          service:
            name: video-chat-backend-service
            port:
              number: 5001
  - host: api.video-chat.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: video-chat-backend-service
            port:
              number: 5001
---
# Network Policy for additional security
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: video-chat-network-policy
  namespace: video-chat
  labels:
    app.kubernetes.io/name: video-chat
    app.kubernetes.io/component: network-policy
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: video-chat
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    - namespaceSelector:
        matchLabels:
          name: kube-system
    ports:
    - protocol: TCP
      port: 80
    - protocol: TCP
      port: 5001
  - from:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: video-chat
    ports:
    - protocol: TCP
      port: 80
    - protocol: TCP
      port: 5001
    - protocol: TCP
      port: 6379
  egress:
  - to: []
    ports:
    - protocol: TCP
      port: 53
    - protocol: UDP
      port: 53
  - to:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: video-chat
    ports:
    - protocol: TCP
      port: 80
    - protocol: TCP
      port: 5001
    - protocol: TCP
      port: 6379
  - to: []
    ports:
    - protocol: TCP
      port: 443
    - protocol: TCP
      port: 80